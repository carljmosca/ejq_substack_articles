# Enable Elytron LDAP
quarkus.security.ldap.enabled=true

# Bind to LDAP using the admin user created by the container
quarkus.security.ldap.dir-context.url=ldap://localhost:1389
quarkus.security.ldap.dir-context.principal=cn=admin,dc=quarkus,dc=io
quarkus.security.ldap.dir-context.password=adminpassword

# Users live under ou=Users (case sensitive)
quarkus.security.ldap.identity-mapping.search-base-dn=ou=Users,dc=quarkus,dc=io
# Users are identified by uid
quarkus.security.ldap.identity-mapping.rdn-identifier=uid

# Map LDAP groups to roles:
# Groups are in ou=Roles with groupOfNames structure
# Map the group's cn to a SecurityIdentity role if member matches the user DN
quarkus.security.ldap.identity-mapping.attribute-mappings."0".from=cn
quarkus.security.ldap.identity-mapping.attribute-mappings."0".filter=(member=uid={0},ou=Users,dc=quarkus,dc=io)
quarkus.security.ldap.identity-mapping.attribute-mappings."0".filter-base-dn=ou=Roles,dc=quarkus,dc=io

# Optional: cache LDAP lookups for performance (defaults shown)
# quarkus.security.ldap.cache.enabled=true
# quarkus.security.ldap.cache.max-age=60s
# quarkus.security.ldap.cache.size=100

# Compose Dev Services configuration
quarkus.compose.devservices.enabled=true
quarkus.compose.devservices.compose-file=compose-devservices.yml
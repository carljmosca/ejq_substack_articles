# --- LangChain4j Ollama ---
# Dev mode can auto-start Ollama and auto-pull the model; pre-pull to speed up.
# Model choices: qwen3:1.7b, llama3, mistral, etc.
quarkus.langchain4j.ollama.chat-model.model-name=llama3
quarkus.langchain4j.ollama.chat-model.temperature=0
# Global inference timeout for LangChain4j (Quarkus extension setting):
quarkus.langchain4j.timeout=45s

# --- Fault Tolerance global toggles ---
quarkus.fault-tolerance.metrics.enabled=true
# Keep SmallRye's sensible non-strict mode (see guide for differences)
quarkus.fault-tolerance.mp-compatibility=false

# --- Per-method FT overrides using <identifier> = ClassName/methodName ---
# Weâ€™ll override annotations applied on AiSummarizer.summarize(..)

# Timeout tighter than global LLM timeout
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".timeout.value=10
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".timeout.unit=SECONDS

# Retry with exponential backoff and jitter (SmallRye)
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".retry.max-retries=2
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".retry.delay=200
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".retry.delay-unit=MILLIS
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".retry.jitter=400
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".retry.jitter-unit=millis
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".exponential-backoff.enabled=true
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".exponential-backoff.factor=2

# Circuit breaker tuned for LLM flakiness
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".circuit-breaker.request-volume-threshold=8
quarkus.fault-tolerance."AiSummarizer/summarize".circuit-breaker.failure-ratio=0.5
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".circuit-breaker.delay=10
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".circuit-breaker.delay-unit=SECONDS
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".circuit-breaker.success-threshold=2

# Bulkhead to avoid CPU thrash (synchronous; no queue)
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".bulkhead.value=8

# Rate limit (SmallRye extra) to throttle bursty clients
# 5 requests per second:
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".rate-limit.value=5
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".rate-limit.window=1
quarkus.fault-tolerance."com.example.AiSummarizer/summarize".rate-limit.window-unit=SECONDS